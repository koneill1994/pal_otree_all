session
for(row in 1:nrow(g1)){
print(row)
session=session[[as.character(row)]]=list(g1[row,]$words,g1[row,]$match)
}
session=session[[as.character(row)]]=list(g1[row,]$words,g1[row,]$match)
for(row in 1:nrow(g1)){
print(row)
session=session[[as.character(row)]]=list(g1[row,]$words,g1[row,]$match)
}
session
g1=wordlist[1:5,]
session=list()
for(row in 1:nrow(g1)){
print(row)
session=session[[paste("V",as.character(row))]]=list(g1[row,]$words,g1[row,]$match)
}
session
g1=wordlist[1:5,]
session=list()
for(row in 1:nrow(g1)){
print(row)
session[[paste("V",as.character(row))]]=list(g1[row,]$words,g1[row,]$match)
}
session
g1=wordlist[1:5,]
session=list()
for(row in 1:nrow(g1)){
print(row)
session[row]=list(g1[row,]$words,g1[row,]$match)
}
session
g1=wordlist[1:5,]
session=list()
for(row in 1:nrow(g1)){
print(row)
session[[row]]=list(g1[row,]$words,g1[row,]$match)
}
session
toJSON(session)
1:10
5+1:10
sesh=1
(sesh-1)*10+5+1:10
(sesh-2)*10+5+1:10
sesh=2
(sesh-2)*10+5+1:10
sesh=3
(sesh-2)*10+5+1:10
sesh=3
(sesh-2)*5+5+1:10
sesh=2
(sesh-2)*5+5+1:10
sesh=3
(sesh-2)*5+5+1:10
sesh=4
(sesh-2)*5+5+1:10
(sesh-2)*5+6:15
words_i=function(sesh){
if(sesh==1){
1:10
}
else{
(sesh-2)*5+6:15
}
}
words_i(1)
words_i(2)
words_i(3)
words_i(n)
for(n in 1:6){
wordlist[words_i(n)]
# wp_new=list(n,list(words,match))
#
}
for(n in 1:6){
wordlist[words_i(n),]
# wp_new=list(n,list(words,match))
#
}
wordlist[words_i(n),]
runif
runif(10)
?runif
runif(10,1,9)
sample(f_l)
f_l
sample(f_l,10)
for(n in 1:6){
wordgroup=wordlist[words_i(n),]
session=list()
for(row in 1:nrow(wordgroup)){
session[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
}
sample(f_l,10)
}
length(f_l)
length(session)
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE,stringsAsFactors = F)
View(foils)
source('~/ratpal scratchpad.R')
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE,stringsAsFactors = F)
f_l=unlist(lapply(foils$V2,tolower))
length(f_l)
wordlist
words_i=function(sesh){
if(sesh==1){
1:10
}
else{
(sesh-2)*5+6:15
}
}
for(n in 1:6){
wordgroup=wordlist[words_i(n),]
session=list()
for(row in 1:nrow(wordgroup)){
session[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
}
f=sample(f_l,10)
length(session)
}
length(session)
f)
length(f)
runif(1)>.5
runif(1)>.5
runif(1)>.5
runif(1)>.5
runif(1)>.5
runif(1)>.5
fc=1
f[[fc]]
w
for(n in 1:6){
wordgroup=wordlist[words_i(n),]
w=list()
for(row in 1:nrow(wordgroup)){
w[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
}
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
# while(length(sesh)<20){
#   if(wc>=10)
#     sesh[[length(sesh)+1]]=f[[fc]]
#
#
#   if(runif(1)>.5){
#     sesh[[length(sesh)+1]]=
#   }
#
#
# }
}
w
wordlist[words_i(n),]
wordgroup=wordlist[words_i(n),]$match
wordgroup
f[[fc]]
w[[wc]]
w=wordlist[words_i(n),]$match
w
w[[wc]]
f[fc]
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(length(sesh)<20){
if(wc>=10)
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
else if(fc>=10)
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
}
}
}
}
sesh
toJSON(sesh)
fc++
else if(fc>=10)
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(length(sesh)<20){
if(wc>=10){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc++
}
else if(fc>=10){
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc++
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc++
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc++
}
}
}
}
1++
1+=1
a=1
a++
a+=1
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(length(sesh)<20){
if(wc>=10){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=10){
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
}
toJSON(sesh)
sesh
wc
fc
wc
f[0
]
f[10]
c[10]
w[10]
w[11]
f[11]
length(sesh)
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(length(sesh)<20){
if(wc>=10){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=10){
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
}
toJSON(sesh)
wc
fc
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(wc<10 | fc<10){
if(wc>=10){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=10){
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
}
sesh
toJSON(sesh)
length(sesh)
length(f)
length(w)
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(wc<11 | fc<11){
if(wc>=11){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=11){
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
}
length(sesh)
toJSON(sesh)
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(wc<11 | fc<11){
if(wc>=11){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=11){
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
nlist[[n]]=sesh
}
nlist=list()
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(wc<11 | fc<11){
if(wc>=11){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=11){
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
nlist[[n]]=sesh
}
length(nlist)
toJSON(nlist)
library(jsonlite)
# this reads in the ratpal list and exports a formatted csv
# ratpal=read.csv(file.choose(),header=FALSE)
ratpal=read.csv("D:/downloads_D/RAT items.csv",header=FALSE,stringsAsFactors = F)
View(ratpal)
# word_df=data.frame(
#   apply(ratpal,1,
#     function(r){
#       unlist(lapply(
#         unlist(strsplit(as.character(r)," "))[c(1,2)],
#         function(x){strsplit(x,"/")})
#       )
#     }
#   )
# )
# not regular construction
wordlist=data.frame(,stringsAsFactors = F)
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,1,9)),match))
}
write.csv(wordlist,"ratpal_words.csv")
write(toJSON(wordpairs),"wordlist.json")
write(toJSON(numpairs),"numlist.json")
# new plan:
# dump words into groups, along with foils, which will be read by otree
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE,stringsAsFactors = F)
# View(foils)
f_l=unlist(lapply(foils$V2,tolower))
# for both hometime and study time
# 5 old (last 5 of last round), 5 new, 10 foils sampled from list
# so they'll see all of them once in school time
# except for first 5 and last 5
words_i=function(sesh){
if(sesh==1){
1:10
}
else{
(sesh-2)*5+6:15
}
}
nlist=list()
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(wc<11 | fc<11){
if(wc>=11){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=11){
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=list(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=list(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
nlist[[n]]=sesh
}
write(toJSON(nlist),"nlist")
# if we want to replace the schooltime stuff use this code below
# for(n in 1:6){
#
#   wordgroup=wordlist[words_i(n),]
#
#   w=list()
#
#   for(row in 1:nrow(wordgroup)){
#     w[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
#   }
#
#   f=sample(f_l,10)
#
#   sesh=list()
#   wc=1
#   fc=1
setwd("D:\otree\oTree")
setwd("D:/otree/oTree")
write(toJSON(nlist),"nlist")
write(toJSON(nlist),"nlist.json")
