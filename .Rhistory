r3
r3[length(r3)]
match=r3[length(r3)]
r3[1:(length(r3)-1)]
paste(r3[1:(length(r3)-1)],collapse = '')
words=paste(r3[1:(length(r3)-1)],collapse = '')
data.frame(words,match)
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
}
View(wordlist)
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
}
wordpairs
toJSON(wordpairs)
df1=read.csv("D:/downloads_D/CR.Motivation Survey Items.csv")
View(df1)
df1=read.csv("D:/downloads_D/CR.Motivation Survey Items.csv",header=F)
View(df1)
df1[,1]
any(df1[,1])
any(df1[,10])
any(df1[,1])
df1=read.csv("D:/downloads_D/CR.Motivation Survey Items.csv",header=F,stringsAsFactors = F)
any(df1[,1])
any(is.character(df1[,1]))
all(is.character(df1[,1]))
(is.character(df1[,1]))
(is.character(df1[,1]))
(is.character(df1[,10]))
any(is.character(df1[,10]))
apply(df1,2,function(x){
df1[,any(is.character(x))]
})
Filter(function(x)!all(is.na(x)), df1)
View(Filter(function(x)!all(is.na(x)), df1))
df1=(Filter(function(x)!all(is.na(x)), df1))
pages=df1[,1]
pages=df1[,1]
p=""
for(r in length(pages){
for(r in length(pages)){
if(pages[r]!=""){
p=pages[r]
}
else{
pages[r]=p
}
}
pages
for(r in length(pages)){
if(pages[r]!=""){
p=pages[r]
}
else{
pages[r]=p
}
}
pages[r]
pages[r]!=""
p
r
for(r in 1:length(pages)){
if(pages[r]!=""){
p=pages[r]
}
else{
pages[r]=p
}
}
df1[,1]=pages
df1[,1]=pages
colnames(df1)=c("page","survey","text")
library(jsonlite)
ratpal=read.csv(file.choose(),header=FALSE)
View(ratpal)
ratpal=read.csv(file.choose(),header=FALSE)
i
ratpal=read.csv(file.choose(),header=FALSE)
# ratpal=read.csv(file.choose(),header=FALSE)
ratpal=read.csv("D:/downloads_D/RAT items.csv",header=FALSE)
View(ratpal)
wordpairs=vector("list",nrow(ratpal))
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
}
wordlist
wordpairs
randint
randu
randu(1)
runif(1)
runif(0,9,1)
runif(1,9,1)
runif(0,9,1.0)
?ruinif
?runif
runif(1,0,9)
round(runif(1,0,9))
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,0,9)),match))
}
numpairs
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,1,9)),match))
}
numpairs
write(toJSON(numpairs),"numlist.json")
getwd()
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE)
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE)
View(foils)
foils$V2
lapply(foils$V2,tolower)
unlist(lapply(foils$V2,tolower))
unlist(lapply(foils$V2,tolower))
library(jsonlite)
# this reads in the ratpal list and exports a formatted csv
# ratpal=read.csv(file.choose(),header=FALSE)
ratpal=read.csv("D:/downloads_D/RAT items.csv",header=FALSE)
View(ratpal)
# word_df=data.frame(
#   apply(ratpal,1,
#     function(r){
#       unlist(lapply(
#         unlist(strsplit(as.character(r)," "))[c(1,2)],
#         function(x){strsplit(x,"/")})
#       )
#     }
#   )
# )
# not regular construction
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,1,9)),match))
}
write.csv(wordlist,"ratpal_words.csv")
write(toJSON(wordpairs),"wordlist.json")
write(toJSON(numpairs),"numlist.json")
# new plan:
# dump words into groups, along with foils, which will be read by otree
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE)
View(foils)
unlist(lapply(foils$V2,tolower))
f_l=unlist(lapply(foils$V2,tolower))
length(f_l)
lapply(f_l, length)
source('~/ratpal scratchpad.R', echo=TRUE)
length(f_l)
f_l
ratpal
row
r2
r3
match
words
words
wordlist
wordlist
wordlist[1,]
typeof(wordlist[1,])
typeof(wordlist[1:5,])
summary(wordlist[1:5,])
mode(wordlist[1:5,])
storage.mode(wordlist[1:5,])
mode(wordlist[1:5,])
toJSON(wordlist[1:5,])
toJSON(wordlist[1,])
toJSON(unlist(wordlist[1,]))
lapply(wordlist[1:5],unlist)
lapply(wordlist[1:5,],unlist)
toJSON(lapply(wordlist[1:5,],unlist))
lapply(wordlist[1:5,],unlist)
apply(wordlist[1:5,],1,unlist)
unlist(apply(wordlist[1:5,],1,unlist))
tojson(apply(wordlist[1:5,],1,unlist))
toJSON(apply(wordlist[1:5,],1,unlist))
toJSON(apply(wordlist[1:5,],2,unlist))
apply(wordlist[6:10,],2,unlist)
toJSON(list(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist)))
toJSON(paste(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist)))
toJSON(c(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist)))
toJSON(
do.call(
c,
list(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist))
)
)
apply(wordlist[1:5,],2,unlist)
toJSON(apply(wordlist[1:5,],2,unlist))
toJSON(append(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist)))
apply(wordlist[1:5,],2,unlist)
list(apply(wordlist[1:5,],2,unlist))
as.list(apply(wordlist[1:5,],2,unlist))
toJSON(append(c(apply(wordlist[1:5,],2,unlist)),apply(wordlist[6:10,],2,unlist)))
c(apply(wordlist[1:5,],2,unlist))
list(apply(wordlist[1:5,],2,unlist))
unlist(apply(wordlist[1:5,],2,unlist))
?shape
as.vector(apply(wordlist[1:5,],2,unlist))
as.vector(t(apply(wordlist[1:5,],2,unlist)))
words_i=function(sesh){
if(sesh==1){
1:10
}
else{
(sesh-2)*5+6:15
}
}
lapply(1:6,words_i)
nlist=list()
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(wc<11 | fc<11){
if(wc>=11){
sesh[[length(sesh)+1]]=c(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=11){
sesh[[length(sesh)+1]]=c(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=c(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=c(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
nlist[[n]]=sesh
}
library(jsonlite)
# this reads in the ratpal list and exports a formatted csv
# ratpal=read.csv(file.choose(),header=FALSE)
ratpal=read.csv("D:/downloads_D/RAT items.csv",header=FALSE,stringsAsFactors = F)
# remove the entry with 2 answers
# (high/district/house)
ratpal=data.frame(ratpal[1:nrow(ratpal)!=20,])
apply(ratpal,1,
function(x){
"district" %in% x
})
wordlist=data.frame(words=character(),match=character(),stringsAsFactors = F)
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,1,9)),match))
}
write.csv(wordlist,"ratpal_words.csv")
write(toJSON(wordpairs),"wordlist.json")
write(toJSON(numpairs),"numlist.json")
# dump words into groups, along with foils, which will be read by otree
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE,stringsAsFactors = F)
# View(foils)
f_l=unlist(lapply(foils$V2,tolower))
# for both hometime and study time
# 5 old (last 5 of last round), 5 new, 10 foils sampled from list
# so they'll see all of them once in school time
# except for first 5 and last 5
wordlist$words=as.character(wordlist$words)
wordlist$match=as.character(wordlist$match)
words_i=function(sesh){
if(sesh==1){
1:10
}
else{
(sesh-2)*5+6:15
}
}
nlist=list()
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(wc<11 | fc<11){
if(wc>=11){
sesh[[length(sesh)+1]]=c(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=11){
sesh[[length(sesh)+1]]=c(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=c(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=c(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
nlist[[n]]=sesh
}
setwd("D:/otree/oTree")
write(toJSON(nlist),"nlist.json")
write(toJSON(wordpairs),"wordlist.json")
# if we want to replace the schooltime stuff use this code below
# for(n in 1:6){
#
#   wordgroup=wordlist[words_i(n),]
#
#   w=list()
#
#   for(row in 1:nrow(wordgroup)){
#     w[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
#   }
#
#   f=sample(f_l,10)
#
#   sesh=list()
#   wc=1
#   fc=1
apply(ratpal,1,
function(x){
"district" %in% x
})
# remove the entry with 2 answers
# (high/district/house)
ratpal=data.frame(ratpal[1:nrow(ratpal)!=20,])
ratpal
rm(list = ls())
library(jsonlite)
# this reads in the ratpal list and exports a formatted csv
rm(list = ls())
# ratpal=read.csv(file.choose(),header=FALSE)
ratpal=read.csv("D:/downloads_D/RAT items.csv",header=FALSE,stringsAsFactors = F)
# remove the entry with 2 answers
# (high/district/house)
ratpal=data.frame(ratpal[1:nrow(ratpal)!=20,])
wordlist=data.frame(words=character(),match=character(),stringsAsFactors = F)
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,1,9)),match))
}
write.csv(wordlist,"ratpal_words.csv")
write(toJSON(wordpairs),"wordlist.json")
write(toJSON(numpairs),"numlist.json")
# dump words into groups, along with foils, which will be read by otree
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE,stringsAsFactors = F)
# View(foils)
f_l=unlist(lapply(foils$V2,tolower))
# for both hometime and study time
# 5 old (last 5 of last round), 5 new, 10 foils sampled from list
# so they'll see all of them once in school time
# except for first 5 and last 5
wordlist$words=as.character(wordlist$words)
wordlist$match=as.character(wordlist$match)
words_i=function(sesh){
if(sesh==1){
1:10
}
else{
(sesh-2)*5+6:15
}
}
nlist=list()
for(n in 1:6){
w=wordlist[words_i(n),]$match
f=sample(f_l,10)
sesh=list()
wc=1
fc=1
while(wc<11 | fc<11){
if(wc>=11){
sesh[[length(sesh)+1]]=c(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else if(fc>=11){
sesh[[length(sesh)+1]]=c(w[wc],round(runif(1,1,9)))
wc=wc+1
}
else{
if(runif(1)>.5){
sesh[[length(sesh)+1]]=c(f[fc],round(runif(1,1,9)))
fc=fc+1
}
else{
sesh[[length(sesh)+1]]=c(w[wc],round(runif(1,1,9)))
wc=wc+1
}
}
}
nlist[[n]]=sesh
}
setwd("D:/otree/oTree")
write(toJSON(nlist),"nlist.json")
write(toJSON(wordpairs),"wordlist.json")
# if we want to replace the schooltime stuff use this code below
# for(n in 1:6){
#
#   wordgroup=wordlist[words_i(n),]
#
#   w=list()
#
#   for(row in 1:nrow(wordgroup)){
#     w[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
#   }
#
#   f=sample(f_l,10)
#
#   sesh=list()
#   wc=1
#   fc=1
nlist
wordpairs
wordgroup=wordlist[words_i(n),]
wordgroup
for(row in 1:nrow(wordgroup)){
w[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
}
w=list()
for(row in 1:nrow(wordgroup)){
w[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
}
w
wlist=list()
for(n in 1:6){
wordgroup=wordlist[words_i(n),]
w=list()
for(row in 1:nrow(wordgroup)){
w[[row]]=list(wordgroup[row,]$words,wordgroup[row,]$match)
}
wlist[[n]]=w
}
wlist
write(toJSON(nlist),"nlist.json")
write(toJSON(wordpairs),"wlist.json")
setwd("D:/otree/oTree")
write(toJSON(nlist),"nlist.json")
write(toJSON(wordpairs),"wlist.json")
write(toJSON(wordpairs),"wordlist.json")
setwd("D:/otree/oTree")
write(toJSON(nlist),"nlist.json")
write(toJSON(wlist),"wlist.json")
