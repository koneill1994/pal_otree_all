prior=c(rep(0,npoints*.5),rep(0.5,npoints*.5))
plot(prior)
j="[[1684,3010],[4053,4859],[5712,9582],[19192,19289],[19761,20271],[21212,21274],[25763,27200],[31624,35457],[93752,93819],[94638,95308],[95742,95766],[96101,96436],[96623,96650],[96870,97085],[97328,97563],[97725,97742],[98852,99845],[100626,101097],[101693,101717],[102819,102869],[103291,103316],[103812,103861],[104146,104170],[104457,104482],[104767,104791],[105352,105374],[105484,105510],[105707,105733]]"
library(jsonlite)
json.loads(j)
fromJSON(j)
View(fromJSON(j))
k="[[""game"",2075],[""rest"",222409]]"
k="[[""game"",2075],[""rest"",222409]]"
View(fromJSON(k))
k="[[game,2075],[rest,222409]]"
View(fromJSON(k))
k="[["game"",2075],[""rest"",222409]]"
library(jsonlite)
View(fromJSON(k))
k="[[""game"",2075],[""rest"",222409]]"
library(jsonlite)
k="[[""game"",2075],[""rest"",222409]]"
k="[[game,2075],[rest,222409]]"
library(jsonlite)
View(fromJSON(k))
k="[[\"game\",2075],[\"rest\",222409]]"
library(jsonlite)
View(fromJSON(k))
test="a/b/c d"
strsplit(test," ")
strsplit(strsplit(test," "),"/")
tapply(strsplit(test," "),function(x){strsplit(x,"/")})
lapply(strsplit(test," "),function(x){strsplit(x,"/")})
sapply(strsplit(test," "),function(x){strsplit(x,"/")})
apply(strsplit(test," "),function(x){strsplit(x,"/")})
unlist(lapply(strsplit(test," "),function(x){strsplit(x,"/")}))
ratpal=read.csv(file.choose())
View(ratpal)
ratpal[0]
ratpal[1,]
strsplit(ratpal[1,]," ")
strsplit(as.character(ratpal[1,])," ")
strsplit(as.character(ratpal[1,])," ")[c(1,2)]
unlist(strsplit(as.character(ratpal[1,])," "))[c(1,2)]
unlist(lapply(
unlist(strsplit(as.character(ratpal[1,])," "))[c(1,2)],
function(x){strsplit(x,"/")})
)
word_df=data.frame(
apply(ratpal,1,
function(r){
unlist(lapply(
unlist(strsplit(as.character(r)," "))[c(1,2)],
function(x){strsplit(x,"/")})
)
}
)
)
apply(ratpal,1,
function(r){
unlist(lapply(
unlist(strsplit(as.character(r)," "))[c(1,2)],
function(x){strsplit(x,"/")})
)
}
)
View(ratpal)
strsplit(as.character(ratpal[1,])," ")
row=strsplit(as.character(ratpal[1,])," ")
length(row)
row=unlist(strsplit(as.character(ratpal[1,])," "))
length(row)
length(row)-10
row[1:length(row)-10]
length(row)-10
row[1:(length(row)-10)]
apply(ratpal,1,
function(row){
row[1:(length(row)-10)]
}
)
for row in iterrows(ratpal){
print(row[1:(length(row)-10)])
}
for(row in iterrows(ratpal)){
print(row[1:(length(row)-10)])
}
for(row in ratpal){
print(row[1:(length(row)-10)])
}
for(row in ratpal){
r2=unlist(strsplit(as.character(ratpal[1,])," "))
print(r2[1:(length(r2)-10)])
}
r2=unlist(strsplit(as.character(row)," "))
for(row in ratpal){
r2=unlist(strsplit(as.character(row)," "))
print(r2[1:(length(r2)-10)])
}
print(r2)
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
print(r2)
# print(r2[1:(length(r2)-10)])
}
# print(r2)
print(r2[1:(length(r2)-10)])
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
# print(r2)
print(r2[1:(length(r2)-10)])
}
r3=(r2[1:(length(r2)-10)])
r3
r3=["cast",       "/side/jump", "broad"]
r3=c("cast",       "/side/jump", "broad")
r3[length[r3]]
r3[length[r3-1]]
r3
r3[1]
r3[length([3-1)]
r3[length(r3)-1]
r3[length(r3)]
r3[1:length(r3)]
r3[1:(length(r3)-1)]
words=paste(r3[1:(length(r3)-1)])
words
words=paste(r3[1:(length(r3)-1)],collapse = '')
words
wordlist=data.frame()
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,list(words,match))
}
wordlist
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,c(words,match))
}
wordlist
warnings()
wordlist=data.frame()
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
}
wordlist
write.csv(wordlist,"ratpal_words.csv")
getwd()
View(ratpal)
ratpal=read.csv(file.choose(),header=FALSE)
View(ratpal)
wordlist=data.frame()
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
}
write.csv(wordlist,"ratpal_words.csv")
wordlist
wordlist
write.csv(wordlist,"ratpal_words.csv")
json.dumps(wordlist)
library(jsonlite)
json.dumps(wordlist)
toJSON(wordlist)
list(wordlist)
wordpairs=list()
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs.append(list(words,match))
}
wordpairs=vector("list",nrows(ratpal))
wordpairs=vector("list",nrow(ratpal))
wordpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[.append][r]]=(list(words,match))
}
wordpairs[[r]]=(list(words,match))
wordpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
}
wordpairs
toJSON(wordpairs)
write(toJSON(wordpairs),"wordlist.json")
library(jsonlite)
ratpal=read.csv(file.choose(),header=FALSE)
View(ratpal)
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
r
r=1
row=ratpal[r,]
row
r2=unlist(strsplit(as.character(row)," "))
r2
r3=(r2[1:(length(r2)-10)])
r3
r3[length(r3)]
match=r3[length(r3)]
r3[1:(length(r3)-1)]
paste(r3[1:(length(r3)-1)],collapse = '')
words=paste(r3[1:(length(r3)-1)],collapse = '')
data.frame(words,match)
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
}
View(wordlist)
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
}
wordpairs
toJSON(wordpairs)
df1=read.csv("D:/downloads_D/CR.Motivation Survey Items.csv")
View(df1)
df1=read.csv("D:/downloads_D/CR.Motivation Survey Items.csv",header=F)
View(df1)
df1[,1]
any(df1[,1])
any(df1[,10])
any(df1[,1])
df1=read.csv("D:/downloads_D/CR.Motivation Survey Items.csv",header=F,stringsAsFactors = F)
any(df1[,1])
any(is.character(df1[,1]))
all(is.character(df1[,1]))
(is.character(df1[,1]))
(is.character(df1[,1]))
(is.character(df1[,10]))
any(is.character(df1[,10]))
apply(df1,2,function(x){
df1[,any(is.character(x))]
})
Filter(function(x)!all(is.na(x)), df1)
View(Filter(function(x)!all(is.na(x)), df1))
df1=(Filter(function(x)!all(is.na(x)), df1))
pages=df1[,1]
pages=df1[,1]
p=""
for(r in length(pages){
for(r in length(pages)){
if(pages[r]!=""){
p=pages[r]
}
else{
pages[r]=p
}
}
pages
for(r in length(pages)){
if(pages[r]!=""){
p=pages[r]
}
else{
pages[r]=p
}
}
pages[r]
pages[r]!=""
p
r
for(r in 1:length(pages)){
if(pages[r]!=""){
p=pages[r]
}
else{
pages[r]=p
}
}
df1[,1]=pages
df1[,1]=pages
colnames(df1)=c("page","survey","text")
library(jsonlite)
ratpal=read.csv(file.choose(),header=FALSE)
View(ratpal)
ratpal=read.csv(file.choose(),header=FALSE)
i
ratpal=read.csv(file.choose(),header=FALSE)
# ratpal=read.csv(file.choose(),header=FALSE)
ratpal=read.csv("D:/downloads_D/RAT items.csv",header=FALSE)
View(ratpal)
wordpairs=vector("list",nrow(ratpal))
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
}
wordlist
wordpairs
randint
randu
randu(1)
runif(1)
runif(0,9,1)
runif(1,9,1)
runif(0,9,1.0)
?ruinif
?runif
runif(1,0,9)
round(runif(1,0,9))
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,0,9)),match))
}
numpairs
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,1,9)),match))
}
numpairs
write(toJSON(numpairs),"numlist.json")
getwd()
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE)
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE)
View(foils)
foils$V2
lapply(foils$V2,tolower)
unlist(lapply(foils$V2,tolower))
unlist(lapply(foils$V2,tolower))
library(jsonlite)
# this reads in the ratpal list and exports a formatted csv
# ratpal=read.csv(file.choose(),header=FALSE)
ratpal=read.csv("D:/downloads_D/RAT items.csv",header=FALSE)
View(ratpal)
# word_df=data.frame(
#   apply(ratpal,1,
#     function(r){
#       unlist(lapply(
#         unlist(strsplit(as.character(r)," "))[c(1,2)],
#         function(x){strsplit(x,"/")})
#       )
#     }
#   )
# )
# not regular construction
wordlist=data.frame()
wordpairs=vector("list",nrow(ratpal))
numpairs=vector("list",nrow(ratpal))
for(r in 1:nrow(ratpal)){
row=ratpal[r,]
r2=unlist(strsplit(as.character(row)," "))
r3=(r2[1:(length(r2)-10)])
match=r3[length(r3)]
words=paste(r3[1:(length(r3)-1)],collapse = '')
wordlist=rbind(wordlist,data.frame(words,match))
wordpairs[[r]]=(list(words,match))
numpairs[[r]]=(list(round(runif(1,1,9)),match))
}
write.csv(wordlist,"ratpal_words.csv")
write(toJSON(wordpairs),"wordlist.json")
write(toJSON(numpairs),"numlist.json")
# new plan:
# dump words into groups, along with foils, which will be read by otree
foils=read.csv("D:/downloads_D/ratpal_foils.csv",header=FALSE)
View(foils)
unlist(lapply(foils$V2,tolower))
f_l=unlist(lapply(foils$V2,tolower))
length(f_l)
lapply(f_l, length)
source('~/ratpal scratchpad.R', echo=TRUE)
length(f_l)
f_l
ratpal
row
r2
r3
match
words
words
wordlist
wordlist
wordlist[1,]
typeof(wordlist[1,])
typeof(wordlist[1:5,])
summary(wordlist[1:5,])
mode(wordlist[1:5,])
storage.mode(wordlist[1:5,])
mode(wordlist[1:5,])
toJSON(wordlist[1:5,])
toJSON(wordlist[1,])
toJSON(unlist(wordlist[1,]))
lapply(wordlist[1:5],unlist)
lapply(wordlist[1:5,],unlist)
toJSON(lapply(wordlist[1:5,],unlist))
lapply(wordlist[1:5,],unlist)
apply(wordlist[1:5,],1,unlist)
unlist(apply(wordlist[1:5,],1,unlist))
tojson(apply(wordlist[1:5,],1,unlist))
toJSON(apply(wordlist[1:5,],1,unlist))
toJSON(apply(wordlist[1:5,],2,unlist))
apply(wordlist[6:10,],2,unlist)
toJSON(list(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist)))
toJSON(paste(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist)))
toJSON(c(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist)))
toJSON(
do.call(
c,
list(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist))
)
)
apply(wordlist[1:5,],2,unlist)
toJSON(apply(wordlist[1:5,],2,unlist))
toJSON(append(apply(wordlist[1:5,],2,unlist),apply(wordlist[6:10,],2,unlist)))
apply(wordlist[1:5,],2,unlist)
list(apply(wordlist[1:5,],2,unlist))
as.list(apply(wordlist[1:5,],2,unlist))
toJSON(append(c(apply(wordlist[1:5,],2,unlist)),apply(wordlist[6:10,],2,unlist)))
c(apply(wordlist[1:5,],2,unlist))
list(apply(wordlist[1:5,],2,unlist))
unlist(apply(wordlist[1:5,],2,unlist))
?shape
as.vector(apply(wordlist[1:5,],2,unlist))
as.vector(t(apply(wordlist[1:5,],2,unlist)))
posix(02/07/20 14-07:00)
library(posix)
time("02/07/20 14-07:00")
time("01/28/20 13-35:57")
time("02/07/20 14-07:00")-
time("01/28/20 13-35:57")
POSIXlt("02/07/20 14-07:00")
as.POSIXlt("02/07/20 14-07:00")
as.POSIXlt("01/28/20 13-35:57")
as.POSIXct("02/07/20 14-07:00")
as.POSIXct("01/28/20 13-35:57")
as.POSIXct("02/07/20 14:07:00")
as.POSIXct("01/28/20 13:35:57")
as.POSIXct("01/28/20_13:35:57")
as.POSIXct("01-28-20 13:35:57")
as.POSIXlt("01-28-20 13:35:57")
as.POSIXct("01-28-20 13:35:57")
as.POSIXct("02-07-20 14:07:00")
as.POSIXct("01-28-20 13:35:57")
as.POSIXct("01-28-20 13:35:57")
as.POSIXct("01-28-20 13:35:57",format=c("%Y-%m-%d %H:%M:%OS"))
as.POSIXct("01-28-20 13:35:57",format=c("%Y-%m-%d %H:%M:%S"))
as.POSIXct("01-28-20 13:35:57",format=c("%d-%m-%Y %H:%M:O%S"))
as.POSIXct("01-28-20 13:35:57",format=c("%d-%m-%Y %H:%M:%S"))
as.POSIXct("01-28-20 13:35:57",format=c("%d-%M-%Y %H:%M:%S"))
b=as.POSIXct("02-07-20 14:07:00")
a=as.POSIXct("01-28-20 13:35:57",format=c("%d-%M-%Y %H:%M:%S"))
b-a
a-b
source('~/ratpal scratchpad.R')
getwd()
ls
list.dirs()
